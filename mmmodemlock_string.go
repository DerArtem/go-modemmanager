// Code generated by "stringer -type=MMModemLock"; DO NOT EDIT.

package go_modemmanager

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MmModemLockUnknown-0]
	_ = x[MmModemLockNone-1]
	_ = x[MmModemLockSimPin-2]
	_ = x[MmModemLockSimPin2-3]
	_ = x[MmModemLockSimPuk-4]
	_ = x[MmModemLockSimPuk2-5]
	_ = x[MmModemLockPhSpPin-6]
	_ = x[MmModemLockPhSpPuk-7]
	_ = x[MmModemLockPhNetPin-8]
	_ = x[MmModemLockPhNetPuk-9]
	_ = x[MmModemLockPhSimPin-10]
	_ = x[MmModemLockPhCorpPin-11]
	_ = x[MmModemLockPhCorpPuk-12]
	_ = x[MmModemLockPhFsimPin-13]
	_ = x[MmModemLockPhFsimPuk-14]
	_ = x[MmModemLockPhNetsubPin-15]
	_ = x[MmModemLockPhNetsubPuk-16]
}

const _MMModemLock_name = "MmModemLockUnknownMmModemLockNoneMmModemLockSimPinMmModemLockSimPin2MmModemLockSimPukMmModemLockSimPuk2MmModemLockPhSpPinMmModemLockPhSpPukMmModemLockPhNetPinMmModemLockPhNetPukMmModemLockPhSimPinMmModemLockPhCorpPinMmModemLockPhCorpPukMmModemLockPhFsimPinMmModemLockPhFsimPukMmModemLockPhNetsubPinMmModemLockPhNetsubPuk"

var _MMModemLock_index = [...]uint16{0, 18, 33, 50, 68, 85, 103, 121, 139, 158, 177, 196, 216, 236, 256, 276, 298, 320}

func (i MMModemLock) String() string {
	if i >= MMModemLock(len(_MMModemLock_index)-1) {
		return "MMModemLock(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MMModemLock_name[_MMModemLock_index[i]:_MMModemLock_index[i+1]]
}
